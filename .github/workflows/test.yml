name: Test / Lint
on:
  push:
  pull_request:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: npm ci
      - run: npm run lint
  test-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install needed tools
        run: choco install OpenCppCoverage

      - run: npm ci

      - name: Rebuild the project with coverage instrumentation
        run: npm run rebuild -- -- --debug

      - name: Workaround path issue with OpenCppCoverage
        run: npm install npm@7

      - name: Run npm test with coverage
        # Run tests using debug symbols for coverage on Windows
        run: |
          C:\Progra~1\OpenCppCoverage\OpenCppCoverage.exe --quiet --cover_children --modules "*.node" --source "packages\bindings\src\*" --export_type=cobertura:coverage/cpp.xml -- npm.cmd test -- --color
        env:
          CI: true

      - name: Publish coverage information to codecov.io
        run: |
          npm run coverage:publish:windows
          npm run coverage:publish:node

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install needed tools
        run: sudo apt-get install -y lcov

      - run: npm ci

      - name: Rebuild the project with coverage instrumentation
        run: npm run rebuild
        env:
          # Enable gcov in binaries
          GENERATE_COVERAGE: yes

      - name: Run tests with GCC Gcov
        run: npm test -- --color
        env:
          CI: true

      - name: Convert gcov `gcda` coverage information to lcov format
        # Also strips coverage information for external modules
        run: npm run coverage:lcov

      - name: Publish coverage information to codecov.io
        run: |
          npm run coverage:publish:nix
          npm run coverage:publish:node

  test-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install needed tools
        run: brew install lcov

      - run: npm ci

      - name: Rebuild the project with coverage instrumentation
        run: npm run rebuild
        env:
          # Enable gcov in binaries
          GENERATE_COVERAGE: yes

      - name: Run tests with LLVM Gcov
        run: npm test -- --color
        env:
          CI: true

      - name: Convert gcov `gcda` coverage information to lcov format
        # Also strips coverage information for external modules
        run: npm run coverage:lcov

      - name: Publish coverage information to codecov.io
        run: |
          npm run coverage:publish:nix
          npm run coverage:publish:node
